/**
 * Generated by orval v7.4.0 üç∫
 * Do not edit manually.
 * letrack-api
 * OpenAPI spec version: v1
 */
export type LapsParams = {
	raceId: number;
	trackId: number;
};

export type RaceListParams = {
	sorts?: string | null;
	filters?: string | null;
	page?: number | null;
	pageSize?: number | null;
};

export interface LapsValidRequest {
	ids: string[];
}

export interface LapsRequest {
	[key: string]: unknown;
}

export interface PlayersDeleteRequest {
	[key: string]: unknown;
}

export interface PlayersInsertRequest {
	name: string;
	/** @nullable */
	nickName?: string | null;
	teamId: number;
}

export interface PlayersUpdateRequest {
	id: number;
	name: string;
	/** @nullable */
	nickName?: string | null;
	teamId: number;
}

export interface RaceDeleteRequest {
	[key: string]: unknown;
}

export interface RaceInsertRequest {
	name: string;
	players: number[];
}

export interface ModelsQueryModel {
	[key: string]: unknown;
}

export type RaceListRequestAllOf = { [key: string]: unknown };

export type RaceListRequest = ModelsQueryModel & RaceListRequestAllOf;

export interface ModelsPaginatedListOfRace {
	items: EntitiesRace[];
	pageNumber: number;
	totalPages: number;
	totalCount: number;
	hasPreviousPage: boolean;
	hasNextPage: boolean;
}

export interface RaceStartRequest {
	id: number;
	duration: number;
	laps: number;
}

export interface RaceStopRequest {
	id: number;
}

export interface RaceSummaryRequest {
	[key: string]: unknown;
}

/**
 * @nullable
 */
export type RaceSummaryTrackFastestLap = DTOLapDTO | null;

export interface RaceSummaryTrack {
	trackId: number;
	laps: DTOLapDTO[];
	player: EntitiesPlayer;
	/** @nullable */
	fastestLap?: RaceSummaryTrackFastestLap;
	totalLaps: number;
}

/**
 * @nullable
 */
export type RaceSummaryResponseFastestLap = DTOLapDTO | null;

export interface RaceSummaryResponse {
	tracks: RaceSummaryTrack[];
	/** @nullable */
	fastestLap?: RaceSummaryResponseFastestLap;
	totalLaps: number;
	race: EntitiesRace;
}

export interface RaceUpdateRequest {
	id: number;
	name: string;
	players: number[];
}

export interface ScoreboardTeamSummary {
	id: number;
	name: string;
	laps: number;
}

export interface ScoreboardPlayerSummary {
	id: number;
	name: string;
	laps: number;
}

export interface ScoreboardResponse {
	/** @nullable */
	playerSummary?: ScoreboardPlayerSummary[] | null;
	/** @nullable */
	teamSummary?: ScoreboardTeamSummary[] | null;
}

export interface TeamsDeleteRequest {
	[key: string]: unknown;
}

export interface TeamsInsertRequest {
	name: string;
}

export interface TeamsUpdateRequest {
	id: number;
	name: string;
}

export interface TrackSummaryRequest {
	[key: string]: unknown;
}

export interface InternalErrorResponse {
	status: string;
	code: number;
	reason: string;
	note: string;
}

/**
 * @nullable
 */
export type EntitiesPlayerTeam = EntitiesTeam | null;

export interface EntitiesPlayer {
	id: number;
	name: string;
	/** @nullable */
	nickName?: string | null;
	/** @nullable */
	teamId?: number | null;
	/** @nullable */
	team?: EntitiesPlayerTeam;
}

export interface EntitiesTeam {
	players: EntitiesPlayer[];
	id: number;
	name: string;
}

export interface EntitiesRaceTrack {
	raceId: number;
	trackId: number;
	playerId: number;
	player: EntitiesPlayer;
}

export interface EntitiesRace {
	id: number;
	name: string;
	raceTracks: EntitiesRaceTrack[];
	isActive: boolean;
	createdDateTime: string;
	/** @nullable */
	startDateTime?: string | null;
	/** @nullable */
	restartDateTime?: string | null;
	/** @nullable */
	endDateTime?: string | null;
	/** @nullable */
	endLapCount?: number | null;
	/** @nullable */
	timeRemaining?: string | null;
}

export interface DTOLapDTO {
	id: string;
	/** @nullable */
	lastLapId?: string | null;
	trackId: number;
	timestamp: string;
	/** @nullable */
	lapTime?: string | null;
	/** @nullable */
	lapTimeDifference?: string | null;
	isFlagged: boolean;
	/** @nullable */
	flagReason?: string | null;
	/** @nullable */
	raceId?: number | null;
	lapNumber: number;
	/** @nullable */
	playerId?: number | null;
	/** @nullable */
	teamId?: number | null;
	isValid: boolean;
}

/**
 * @nullable
 */
export type TrackSummaryResponseRace = EntitiesRace | null;

/**
 * @nullable
 */
export type TrackSummaryResponseFastestLap = DTOLapDTO | null;

export interface TrackSummaryResponse {
	last10Laps: DTOLapDTO[];
	/** @nullable */
	fastestLap?: TrackSummaryResponseFastestLap;
	totalLaps: number;
	/** @nullable */
	race?: TrackSummaryResponseRace;
}
